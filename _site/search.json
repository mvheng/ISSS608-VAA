[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608-VAA",
    "section": "",
    "text": "Welcome to my 10-week ISSS608 Visual Analytics and Applications journey.\nOn this website, you will find my coursework prepared for this course.\nThe road is tough but the following quote motivates me!\n“Everybody, try laughing. Then whatever scares you will go away!” - Tatsuo Kusakabe"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html",
    "title": "Hands-on Exercise 3a: Programming Interactive Data Visualisation with R",
    "section": "",
    "text": "In this exercise, you will learn how to create interactive data visualisation by using functions provided by ggiraph and plotlyr packages."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#loading-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#loading-r-packages",
    "title": "Hands-on Exercise 3a: Programming Interactive Data Visualisation with R",
    "section": "2.1 Loading R Packages",
    "text": "2.1 Loading R Packages\nWe will use the following R packages in this exercise:\n\nggiraph for making ‘ggplot’ graphics interactive.\nplotly, R library for plotting interactive statistical graphs.\nDT provides an R interface to the JavaScript library DataTables that creates interactive tables on html pages.\ntidyverse, a family of modern R packages specially designed to support data science, analysis, and communication tasks including creating static statistical graphs.\npatchwork for combining multiple ggplot2 graphs into one figure.\n\nThe code chunk below will be used to accomplish the task.\n\npacman::p_load(ggiraph, plotly, patchwork, DT, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#importing-data",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#importing-data",
    "title": "Hands-on Exercise 3a: Programming Interactive Data Visualisation with R",
    "section": "2.2 Importing Data",
    "text": "2.2 Importing Data\nWe will use the exam_data which consists of year-end examination grades of a cohort of primary 3 students from a local school. It is in the CSV file format, hence we use read_csv() function of the readr package (one of the tidyverse packages).\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#tooltip-effect",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#tooltip-effect",
    "title": "Hands-on Exercise 3a: Programming Interactive Data Visualisation with R",
    "section": "3.1 Tooltip effect",
    "text": "3.1 Tooltip effect\nBelow is a typical code chunk to plot an interactive statistical graph by using ggiraph package.\nThe code chunk consists of two parts. First, a ggplot object will be created with an interactive version of ggplot2 geom (i.e. geom_dotplot_interactive()). Then, girafe() of ggiraph is used to create an interactive svg object to be displayed on a html page.\n\nTooltip(single info)Tooltip(multiple info)Tooltip (Statistics)Tooltip(Customization)\n\n\n\n\nShow the code\np &lt;- ggplot(data=exam_data,\n          aes(x = MATHS)) +\n    geom_dotplot_interactive(aes(tooltip = ID),\n                             stackgroups = TRUE,\n                             binwidth = 1,\n                             method = \"histodot\") +\n    scale_y_continuous(NULL, breaks = NULL) +\n    theme_classic()\n\ngirafe(ggobj = p,\n       width_svg = 6, height_svg = 6*0.618)\n\n\n\n\n\n\n\n\nWe can add multiple information in the tooltip.\n\n\nShow the code\nexam_data &lt;- exam_data %&gt;%\n  mutate(AVESCORE = round(rowMeans(\n    exam_data[, c(\"ENGLISH\", \"MATHS\", \"SCIENCE\")]), digits = 2))\n\nexam_tooltip &lt;- c(paste0(\"Name = \", exam_data$ID, \n                         \"\\nGender = \", exam_data$GENDER,\n                         \"\\nClass = \", exam_data$CLASS,\n                          \"\\nAve Score = \", exam_data$AVESCORE,\n                          \"\\n Eng,Math,Sci: \",exam_data$ENGLISH, \",\",\n                           exam_data$MATHS, \",\", exam_data$SCIENCE))\n  \np &lt;- ggplot(data=exam_data,\n          aes(x = AVESCORE)) +\n    geom_dotplot_interactive(aes(tooltip = exam_tooltip),\n                             stackgroups = TRUE,\n                             binwidth = 1,\n                             method = \"histodot\") +\n    scale_y_continuous(NULL, breaks = NULL) +\n    theme_classic()\n\ngirafe(ggobj = p,\n       width_svg = 6, height_svg = 6*0.618)\n\n\n\n\n\n\n\n\nWe can add stat_summary() calculations in ggplot.\n\n#create a function to generate the tooltip\ntooltip &lt;- function(y, ymax, accuracy = .01) {\n  mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n\ngg_point &lt;- ggplot(data=exam_data, \n                   aes(x = RACE),) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\") +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, linewidth = 0.2) +\n  theme_classic()\n\ngirafe(ggobj = gg_point,\n       width_svg = 8, height_svg = 8*0.618)\n\n\n\n\n\n\n\nWe can customise the tooltip styles using options in girafe.\n\n\nShow the code\np &lt;- ggplot(data=exam_data,\n          aes(x = MATHS)) +\n    geom_dotplot_interactive(aes(tooltip = ID),\n                             stackgroups = TRUE,\n                             binwidth = 1,\n                             method = \"histodot\") +\n    scale_y_continuous(NULL, breaks = NULL) +\n    theme_classic()\n\ngirafe(ggobj = p,\n       width_svg = 6, height_svg = 6*0.618,\n       options = list(\n         opts_tooltip(css = \"background-color: yellow\")))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#hover-effect-with-id",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#hover-effect-with-id",
    "title": "Hands-on Exercise 3a: Programming Interactive Data Visualisation with R",
    "section": "3.2 Hover effect with ID",
    "text": "3.2 Hover effect with ID\nWe can also use data_id specified in aes() to produce the hovering effect.\n\ndata_iddata_id (+ tooltip)data_id(with styles)data_id(customised with tooltip!)\n\n\nThe following code chunk will select all the students who belong to the same class as data_id = CLASS.\n\n\nShow the code\np &lt;- ggplot(data=exam_data,\n          aes(x = MATHS)) +\n    geom_dotplot_interactive(aes(data_id = CLASS),\n                             stackgroups = TRUE,\n                             binwidth = 1,\n                             method = \"histodot\") +\n    scale_y_continuous(NULL, breaks = NULL) +\n    theme_classic()\n\ngirafe(ggobj = p,\n       width_svg = 6, height_svg = 6*0.618)\n\n\n\n\n\n\n\n\nWe can combine data_id and tooltip in the interactivity.\n\n\nShow the code\np &lt;- ggplot(data=exam_data,\n          aes(x = MATHS)) +\n    geom_dotplot_interactive(aes(data_id = CLASS,\n                                 tooltip = ID),\n                             stackgroups = TRUE,\n                             binwidth = 1,\n                             method = \"histodot\") +\n    scale_y_continuous(NULL, breaks = NULL) +\n    theme_classic()\n\ngirafe(ggobj = p,\n       width_svg = 6, height_svg = 6*0.618)\n\n\n\n\n\n\n\n\nWe can use opts_hover() and opts_hover_inv() to customise the hovering styles.\n\nopts_hover(): effects on hovered geometrics\nopts_hover_inv(): effects on other not-selected geometrics when one geometric is hovered.\n\n\n\nShow the code\np &lt;- ggplot(data=exam_data,\n          aes(x = MATHS)) +\n    geom_dotplot_interactive(aes(data_id = CLASS),\n                             stackgroups = TRUE,\n                             binwidth = 1,\n                             method = \"histodot\") +\n    scale_y_continuous(NULL, breaks = NULL) +\n    theme_classic()\n\ngirafe(ggobj = p,                             \n  width_svg = 6, height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\")))   \n\n\n\n\n\n\n\n\n\n\nShow the code\np &lt;- ggplot(data=exam_data,\n          aes(x = MATHS)) +\n    geom_dotplot_interactive(aes(tooltip = paste0(\"Class = \", CLASS),\n                                 data_id = CLASS),\n                             stackgroups = TRUE,\n                             binwidth = 1,\n                             method = \"histodot\") +\n    scale_y_continuous(NULL, breaks = NULL) +\n    theme_classic()\n\ngirafe(ggobj = p,                             \n  width_svg = 6, height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\")))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#onclick-interactivity",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#onclick-interactivity",
    "title": "Hands-on Exercise 3a: Programming Interactive Data Visualisation with R",
    "section": "3.3 OnClick Interactivity",
    "text": "3.3 OnClick Interactivity\nonclick argument of ggiraph provides hotlink interactivity on the web.\n\n\nShow the code\nexam_data$onclick &lt;- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\n\np &lt;- ggplot(data=exam_data, aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n                      aes(tooltip = \"Click me\",\n                        onclick = onclick),              \n                      stackgroups = TRUE,                  \n                      binwidth = 1,                        \n                      method = \"histodot\") +               \n  scale_y_continuous(NULL, breaks = NULL) +\n  theme_classic()\n\ngirafe(ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#coordinated-multiple-views-with-ggiraph",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#coordinated-multiple-views-with-ggiraph",
    "title": "Hands-on Exercise 3a: Programming Interactive Data Visualisation with R",
    "section": "3.4 Coordinated Multiple Views with ggiraph",
    "text": "3.4 Coordinated Multiple Views with ggiraph\nCoordinated multiple views refer to the visualisation when a data point of one of the plots is selected, the corresponding data point ID on the other plots will be highlighted too.\n\n\nShow the code\np1 &lt;- ggplot(data = exam_data,aes(x = MATHS)) +\n      geom_dotplot_interactive(aes(tooltip= ID, data_id = ID),\n                              stackgroups = TRUE,\n                              binwidth = 1,\n                              method = \"histodot\") +\n      coord_cartesian(xlim = c(0,100)) +\n      scale_y_continuous(NULL, breaks = NULL) +\n      theme_classic()\n      \np2 &lt;- ggplot(data = exam_data, aes(x = ENGLISH)) +\n      geom_dotplot_interactive(aes(tooltip = ID, data_id = ID),\n                              stackgroups = TRUE,\n                              binwidth = 1,\n                              method = \"histodot\") +\n      coord_cartesian(xlim = c(0,100)) +\n      scale_y_continuous(NULL, breaks = NULL)+\n      theme_classic()\n\ngirafe(code = print(p1 / p2),\n    width_svg = 6,\n    height_svg = 3.8,\n    options = list(\n    opts_hover(css = \"fill: #202020;\"),\n    opts_hover_inv(css = \"opacity:0.2;\")))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#interactive-data-visualisation-plotly-methods",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#interactive-data-visualisation-plotly-methods",
    "title": "Hands-on Exercise 3a: Programming Interactive Data Visualisation with R",
    "section": "3.5 Interactive Data Visualisation: plotly methods",
    "text": "3.5 Interactive Data Visualisation: plotly methods\nPlotly’s R graphing library creates interactive web graphics from ggplot2 graphs and/or a custom interface to the (MIT-licensed) JavaScript library plotly.js inspired by the grammar of graphics.\nThere are two ways to create interactive graphs by using plotly, they are:\n\nby using plot_ly(), and\nby using ggplotly()\n\n\n3.5.1 plot_ly()\nThe syntax for ploty_ly() is different from ggplot().\n\nBasicVisual variables\n\n\n\n\nShow the code\nplot_ly(data = exam_data, \n             x = ~MATHS, \n             y = ~ENGLISH)\n\n\n\n\n\n\n\n\nIn the code chunk below, color argument is mapped to a qualitative visual variable (i.e. RACE).\n\n\nShow the code\nplot_ly(data = exam_data, \n             x = ~MATHS, \n             y = ~ENGLISH,\n             color = ~RACE) \n\n\n\n\n\n\n\n\n\n\n\n\nInteractivity of plot_ly()\n\n\n\n\nFilter: When you click on the legend “Chinese”, the data points for “Chinese” are filtered away.\nTooltip: The tooltip is automatically generated and the colour of the the tooltip is synchronous with the legend colour.\nZoom-in ability: Select a range of data points, and the plot will zoom in on these data points.\nAvailable tools to use: Lasso selection, compare data on hover etc.\n\n\n\n\n\n\n\n\n3.5.2 ggplotly()\nUse ggplot() and then wrap ggplotly over. The advantage of this is no need more follow the syntax used in plotly().\n\nBasicMultiple Views\n\n\n\n\nShow the code\np &lt;- ggplot(data=exam_data,\n          aes(x = MATHS, y = ENGLISH)) +\n    geom_point(size = 1) +\n    coord_cartesian(xlim = c(0,100),\n                    ylim = c(0,100))\nggplotly(p)\n\n\n\n\n\n\n\n\n\n\nShow the code\n# specify the data table to highlight in coordinate multiple views\nd &lt;- highlight_key(exam_data)\n\np1 &lt;- ggplot(data = d, \n            aes(x = MATHS, y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim = c(0,100),\n                  ylim = c(0,100)) +\n  theme_classic()\n\np2 &lt;- ggplot(data = d, \n            aes(x = MATHS, y = SCIENCE)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim = c(0,100),\n                  ylim = c(0,100)) +\n  theme_classic()\n\n# combine 2 ggplotly plots together\nsubplot(ggplotly(p1),\n        ggplotly(p2))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#interactive-data-table-dt-package",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#interactive-data-table-dt-package",
    "title": "Hands-on Exercise 3a: Programming Interactive Data Visualisation with R",
    "section": "4.1 Interactive Data Table: DT package",
    "text": "4.1 Interactive Data Table: DT package\nDT package is a wrapper of the JavaScript Library DataTables.\nData objects in R can be rendered as HTML tables using the JavaScript library DataTables.\n\n\nShow the code\nDT::datatable(exam_data, \n              exam_data[c(\"ID\",\"CLASS\",\"GENDER\",\"RACE\",\n                          \"ENGLISH\",\"MATHS\",\"SCIENCE\")],\n              class= \"compact\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#linked-brushing-crosstalk-method",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03a.html#linked-brushing-crosstalk-method",
    "title": "Hands-on Exercise 3a: Programming Interactive Data Visualisation with R",
    "section": "4.2 Linked brushing: crosstalk method",
    "text": "4.2 Linked brushing: crosstalk method\n\n\nShow the code\nd &lt;- highlight_key(exam_data[c(\"ID\",\"CLASS\",\"GENDER\",\n                               \"RACE\",\"ENGLISH\",\"MATHS\",\"SCIENCE\")]) \np &lt;- ggplot(data = d, \n            aes(x= MATHS, y = ENGLISH)) + \n  geom_point(size = 1) +\n  coord_cartesian(xlim = c(0,100),\n                  ylim = c(0,100))\n\n# subset of the selected data points\ngg &lt;- highlight(ggplotly(p), \"plotly_selected\")  \n\ncrosstalk::bscols(gg,               \n                  DT::datatable(d), \n                  widths = 5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-On_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-On_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics",
    "section": "",
    "text": "The code below uses p_load() of the pacman package to check if tidyverse packages are installed in the laptop. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)\n\n\n\n\nLet’s use read_csv function of readr package to load the data from Exam_data.csv into R.\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-On_Ex01/Hands-on_Ex01.html#installing-and-launching-r-packages",
    "href": "Hands-on_Ex/Hands-On_Ex01/Hands-on_Ex01.html#installing-and-launching-r-packages",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics",
    "section": "",
    "text": "The code below uses p_load() of the pacman package to check if tidyverse packages are installed in the laptop. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-On_Ex01/Hands-on_Ex01.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-On_Ex01/Hands-on_Ex01.html#importing-the-data",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics",
    "section": "",
    "text": "Let’s use read_csv function of readr package to load the data from Exam_data.csv into R.\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-On_Ex01/Hands-on_Ex01.html#examination-scores-distribution",
    "href": "Hands-on_Ex/Hands-On_Ex01/Hands-on_Ex01.html#examination-scores-distribution",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics",
    "section": "2.1 Examination scores distribution",
    "text": "2.1 Examination scores distribution\nLet’s create boxplots for the performance of 3 subjects and arrange them in a row for easy comparison.\n\nlibrary(\"ggpubr\")\nboxplt1 &lt;- ggplot(data = exam_data,   \n  aes(y = MATHS)) +   \n  geom_boxplot() \nboxplt2 &lt;- ggplot(data = exam_data,   \n  aes(y = ENGLISH)) +   \n  geom_boxplot()\nboxplt3 &lt;- ggplot(data = exam_data,   \n  aes(y = SCIENCE)) +   \n  geom_boxplot()\nggarrange(boxplt1, boxplt2, boxplt3, ncol = 3, nrow = 1)\n\n\n\n\n\n\n\n\n\n\nObservation\n\n\n\nStudents did better in Maths as compared to English and Science. There are some outliers in Maths and English boxplots where students did very poorly.\n\n\nLet’s dive a little deeper to see how each class performs.\n\nggplot(data = exam_data,   \n  aes(x = CLASS, y = MATHS)) +   \n  geom_boxplot()+\n  stat_summary(geom = \"point\",       \n               fun = \"mean\",         \n               colour = \"red\",        \n               size = 3) \n\n\n\nggplot(data = exam_data,   \n  aes(x = CLASS, y = ENGLISH)) +   \n  geom_boxplot() +\n  stat_summary(geom = \"point\",       \n               fun = \"mean\",         \n               colour = \"red\",        \n               size = 3) \n\n\n\nggplot(data = exam_data,   \n  aes(x = CLASS, y = SCIENCE)) +   \n  geom_boxplot() +\n  stat_summary(geom = \"point\",       \n               fun = \"mean\",         \n               colour = \"red\",        \n               size = 3) \n\n\n\n\n\n\n\n\n\n\nObservations\n\n\n\n\nThere are 9 classes in this dataset.\nStudents from Class 3I have poorer performance in all 3 subjects (many failed 3 subjects), whereas students from Class 3A have better performance in all 3 subjects."
  },
  {
    "objectID": "Hands-on_Ex/Hands-On_Ex01/Hands-on_Ex01.html#race-distribution",
    "href": "Hands-on_Ex/Hands-On_Ex01/Hands-on_Ex01.html#race-distribution",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics",
    "section": "2.2 Race distribution",
    "text": "2.2 Race distribution\nLet’s take a look at the students’ race distribution:\n\nggplot(data = exam_data, \n       aes(x = fct_infreq(RACE))) +\n  geom_bar() +\n  labs(title=\"Distribution of race\",\n       x = \"Race\",\n       y = \"Number of students\") + \n  ylim(0, 210) +\n  geom_text(aes(label = after_stat(count)), \n            stat = \"count\", vjust = -0.5, colour = \"brown\")\n\n\n\n\n\n\n\n\n\n\nObservation\n\n\n\nFrom the bar chart above, the majority of the students are Chinese, followed by Malay.\n\n\nWhat about the race distribution in each class?\n\nggplot(data = exam_data) +\n  geom_bar(mapping = aes(x =CLASS, fill = RACE))\n\n\n\n\n\n\n\n\n\n\nObservations\n\n\n\n\nClass 3A has more Chinese students whereas Class 3I has more Malay students.\nClass 3I has the fewest number of students."
  },
  {
    "objectID": "Hands-on_Ex/Hands-On_Ex01/Hands-on_Ex01.html#gender-distribution",
    "href": "Hands-on_Ex/Hands-On_Ex01/Hands-on_Ex01.html#gender-distribution",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics",
    "section": "2.3 Gender distribution",
    "text": "2.3 Gender distribution\nLet’s take a look at the students’ gender distribution:\n\nggplot(data = exam_data, \n       aes(x = fct_infreq(GENDER))) +\n  geom_bar() +\n  labs(title=\"Distribution of gender\",\n       x = \"Gender\",\n       y = \"Number of students\") + \n  ylim(0, 210) +\n  geom_text(aes(label = after_stat(count)), \n            stat = \"count\", vjust = -0.5, colour = \"brown\")\n\n\n\n\n\n\n\n\n\n\nObservation\n\n\n\nThere are more female students than male students.\n\n\nWhat about the distribution of gender in each class?\n\nggplot(data = exam_data) +\n  geom_bar(mapping = aes(x =CLASS, fill = GENDER))\n\n\n\n\n\n\n\n\n\n\nObservation\n\n\n\nThere are more female students in Class 3B and fewer female students in Class 3I."
  },
  {
    "objectID": "Hands-on_Ex/Hands-On_Ex01/Hands-on_Ex01.html#correlation-between-performances-of-different-subjects",
    "href": "Hands-on_Ex/Hands-On_Ex01/Hands-on_Ex01.html#correlation-between-performances-of-different-subjects",
    "title": "Hands-on Exercise 1: A Layered Grammar of Graphics",
    "section": "2.4 Correlation between performances of different subjects",
    "text": "2.4 Correlation between performances of different subjects\nLet’s see if there is any correlation between the performance of Maths vs English, Maths vs Science, and English vs Science via scatter plots.\n\nggplot(data=exam_data,\n  aes(x = MATHS,y = ENGLISH)) +\n  geom_point() + \n  geom_smooth(linewidth = 0.5) +\n  # use the same axis range\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\n\n\nggplot(data=exam_data,\n  aes(x = MATHS,y = SCIENCE)) +\n  geom_point() + \n  geom_smooth(linewidth = 0.5) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\n\n\nggplot(data=exam_data,\n  aes(x = ENGLISH, y = SCIENCE)) +\n  geom_point() + \n  geom_smooth(linewidth = 0.5) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\n\n\n\n\n\n\n\n\n\nObservations\n\n\n\nAll 3 scatter plots show some positive correlation between the performances of the subjects. However, we would need to calculate the correlation coefficients to determine how strong the correlations are."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "",
    "text": "In this exercise, we are using ggplot2 extensions to create more elegant and effective statistical graphics using ggrepel, ggthemes, hrbrthemes, and patchwork packages."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#installing-and-launching-the-required-libraries",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#installing-and-launching-the-required-libraries",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "2.1 Installing and launching the required libraries",
    "text": "2.1 Installing and launching the required libraries\nThe code below uses p_load() of the Pacman package to check if all the following packages are installed on the laptop. If they are, then they will be launched into R.\n\ntidyverse\nggrepel: an R package provides geoms for ggplot2 to repel overlapping text labels\nggthemes: an R package provides some extra themes, geoms, and scales for ‘ggplot2’.\nhrbrthemes: an R package provides typography-centric themes and theme components for ggplot2.\npatchwork: an R package for preparing composite figures created using ggplot2.\n\n\npacman::p_load(tidyverse, ggrepel,\n               ggthemes, hrbrthemes,\n               patchwork)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#importing-the-data",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "2.2 Importing the data",
    "text": "2.2 Importing the data\nExam_data consists of year-end examination grades of a cohort of primary 3 students from a local school. It is in the CSV file format.\nThe code chunk below imports exam_data.csv into the R environment by using read_csv() function of the readr package (one of the tidyverse packages).\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\n\n\n\n\n\n\nObservations\n\n\n\n\nThis data is about students’ examination scores for their 3 subjects (English, Maths, and Science) from various classes in Primary 3 from a school.\nThere are 4 categorical variables: ID, CLASS, GENDER, and RACE, and 3 continuous variables: ENGLISH, MATHS, and SCIENCE.\nOut of the 3 subjects, Maths has the higher mean and median score."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggrepel",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggrepel",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "3.1 Working with ggrepel",
    "text": "3.1 Working with ggrepel\nLet’s replace geom_label() by geom_label_repel().\n\nggplot(data = exam_data, aes(x = MATHS, y = ENGLISH)) +\n  geom_point() +\n  geom_smooth(method = lm, size = 0.5) +\n  geom_label_repel(aes(label = ID), \n              fontface = \"bold\") +\n  coord_cartesian(xlim = c(0, 100), \n                  ylim = c(0, 100)) +\n  ggtitle(\"English scores versus Maths score for Primary 3 students\")\n\n\n\n\n\n\n\n\n\n\nObservation\n\n\n\nThough the plot is neater, the annotation appears only at some data points as many points are overlapped. There is an option to increase max.overlaps."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggtheme-package",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-ggtheme-package",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "4.1 Working with ggtheme package",
    "text": "4.1 Working with ggtheme package\nggthemes provides ‘ggplot2’ themes that replicate the look of plots by Edward Tufte, Stephen Few, Fivethirtyeight, The Economist, ‘Stata’, ‘Excel’, and The Wall Street Journal, among others.\nCheck out some of the available themes here:\n\nEconomistExcelFewSolarized\n\n\n\nggplot(data = exam_data, aes(x = MATHS)) +\n  geom_histogram(bins = 20, boundary = 100,\n                  color = \"grey25\", fill = \"grey90\") +\n  ggtitle(\"Distribution of Maths scores (Economist theme)\") +\n  theme_economist()\n\n\n\n\n\n\n\nggplot(data = exam_data, aes(x = MATHS)) +\n  geom_histogram(bins = 20, boundary = 100,\n                  color = \"grey25\", fill = \"grey90\") +\n  ggtitle(\"Distribution of Maths scores (Excel theme)\") +\n  theme_excel()\n\n\n\n\n\n\n\nggplot(data = exam_data, aes(x = MATHS)) +\n  geom_histogram(bins = 20, boundary = 100,\n                  color = \"grey25\", fill = \"grey90\") +\n  ggtitle(\"Distribution of Maths scores (Few theme)\") +\n  theme_few()\n\n\n\n\n\n\n\nggplot(data = exam_data, aes(x = MATHS)) +\n  geom_histogram(bins = 20, boundary = 100,\n                  color = \"grey25\", fill = \"grey90\") +\n  ggtitle(\"Distribution of Maths scores (Solarized theme)\") +\n  theme_solarized()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-hrbrthemes-package",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#working-with-hrbrthemes-package",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "4.2 Working with hrbrthemes package",
    "text": "4.2 Working with hrbrthemes package\nhrbrthemes package provides a base theme that focuses on typographic elements, including where various labels are placed as well as the fonts that are used.\n\nggplot(data = exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=20, boundary = 100,\n                  color=\"grey25\", fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum()\n\n\n\n\nThe second goal centers around productivity for a production workflow. This “production workflow” is the context for where the elements of hrbrthemes should be used. Consult this vignette to learn more.\n\nggplot(data = exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=20, boundary = 100,\n                  color=\"grey25\", fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum(axis_title_size = 20, \n              base_size = 15, grid = \"Y\")\n\n\n\n\n\n\n\n\n\n\nAttributes in the theme_ipsum() function\n\n\n\n\naxis_title_size is used to increase the font size of the axis title to 20\nbase_size is used to increase the default axis label to 15\ngrid = \"Y\" is used to remove the x-axis grid lines. If set to “X”, y-axis grid lines will be removed."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-composite-graphics-pathwork-methods",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-composite-graphics-pathwork-methods",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "5.1 Creating composite graphics: pathwork methods",
    "text": "5.1 Creating composite graphics: pathwork methods\nOne ggplot2 extension we are exploring in this section is patchwork.\nThe patchwork package has a very simple syntax where we can create layouts easily."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-two-ggplot2-graphs",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-two-ggplot2-graphs",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "5.2 Combining two ggplot2 graphs",
    "text": "5.2 Combining two ggplot2 graphs\nSimply use + to combine 2 plots in a two-column layout!\n\np1 + p2"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-three-ggplot2-graphs",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-three-ggplot2-graphs",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "5.3 Combining three ggplot2 graphs",
    "text": "5.3 Combining three ggplot2 graphs\nWe can plot more complex composite by using appropriate operators. For example, the composite figure below is plotted by using:\n\n“|” operator to stack two ggplot2 graphs,\n“/” operator to place the plots beside each other,\n“()” operator to define the sequence of the plotting.\n\n\nLayout 1Layout 2Layout 3\n\n\n\n(p1 / p2) | p3\n\n\n\n\n\n\n\n(p1 | p2) / p3\n\n\n\n\n\n\n\np1 | p2 | p3"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-with-tag",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-with-tag",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "5.4 Creating a composite figure with tag",
    "text": "5.4 Creating a composite figure with tag\nIn order to identify subplots in text, patchwork also provides auto-tagging capabilities as shown in the figure below.\n\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-with-an-insert",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-with-an-insert",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "5.5 Creating a composite figure with an insert",
    "text": "5.5 Creating a composite figure with an insert\nWith inset_element() of patchwork, we can place one or several plots or graphic elements freely on top or below another plot.\n\np3 + inset_element(p2,\n  left = 0.02,\n  bottom = 0.7,\n  right = 0.5,\n  top = 1)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-by-using-patchwork-and-ggtheme",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-a-composite-figure-by-using-patchwork-and-ggtheme",
    "title": "Hands-on Exercise 2: Beyond ggplot2 Fundamentals",
    "section": "5.6 Creating a composite figure by using patchwork and ggtheme",
    "text": "5.6 Creating a composite figure by using patchwork and ggtheme\n\nApply theme to all plotsApply theme to a single plot\n\n\n\npatchwork &lt;- (p1 / p2) | p3\npatchwork & theme_economist()\n\n\n\n\n\n\n\n(p1 / p2) | (p3 + theme_economist())"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html",
    "title": "Hands-on Exercise 3b: Programming Animated Statistical Graphics with R",
    "section": "",
    "text": "In this exercise, you will learn how to create animated data visualisation by using gganimate and plotly r packages.\nAt the same time, you will also learn how to reshape data by using tidyr package, and process, wrangle and transform data by using dplyr package.\n\n\nWhen creating animations, the plot does not actually move. Instead, many individual plots are built and then stitched together as movie frames, just like an old-school flip book or cartoon. Each frame is a different plot when conveying motion, which is built using some relevant subset of the aggregate data. The subset drives the flow of the animation when stitched back together.\n\n\n\n\nBefore we dive into the steps for creating an animated statistical graph, it’s important to understand some of the key concepts and terminology related to this type of visualization.\n\nFrame: In an animated line graph, each frame represents a different point in time or a different category. When the frame changes, the data points on the graph are updated to reflect the new data.\nAnimation Attributes: The animation attributes are the settings that control how the animation behaves. For example, you can specify the duration of each frame, the easing function used to transition between frames, and whether to start the animation from the current frame or from the beginning.\n\n\n\n\n\n\n\nTip\n\n\n\nBefore we start making animated graphs, we should first ask ourselves: Does it make sense to go through the effort?\nIf we are conducting an exploratory data analysis, an animated graphic may not be worth the time investment. However, if we are giving a presentation, a few well-placed animated graphics can help an audience connect with our topic remarkably better than static counterparts."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#basic-concepts-of-animation",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#basic-concepts-of-animation",
    "title": "Hands-on Exercise 3b: Programming Animated Statistical Graphics with R",
    "section": "",
    "text": "When creating animations, the plot does not actually move. Instead, many individual plots are built and then stitched together as movie frames, just like an old-school flip book or cartoon. Each frame is a different plot when conveying motion, which is built using some relevant subset of the aggregate data. The subset drives the flow of the animation when stitched back together."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#terminology",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#terminology",
    "title": "Hands-on Exercise 3b: Programming Animated Statistical Graphics with R",
    "section": "",
    "text": "Before we dive into the steps for creating an animated statistical graph, it’s important to understand some of the key concepts and terminology related to this type of visualization.\n\nFrame: In an animated line graph, each frame represents a different point in time or a different category. When the frame changes, the data points on the graph are updated to reflect the new data.\nAnimation Attributes: The animation attributes are the settings that control how the animation behaves. For example, you can specify the duration of each frame, the easing function used to transition between frames, and whether to start the animation from the current frame or from the beginning.\n\n\n\n\n\n\n\nTip\n\n\n\nBefore we start making animated graphs, we should first ask ourselves: Does it make sense to go through the effort?\nIf we are conducting an exploratory data analysis, an animated graphic may not be worth the time investment. However, if we are giving a presentation, a few well-placed animated graphics can help an audience connect with our topic remarkably better than static counterparts."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#loading-the-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#loading-the-r-packages",
    "title": "Hands-on Exercise 3b: Programming Animated Statistical Graphics with R",
    "section": "2.1 Loading the R Packages",
    "text": "2.1 Loading the R Packages\nWe will use the following R packages in this exercise:\n\ntidyverse, a family of modern R packages specially designed to support data science, analysis, and communication tasks including creating static statistical graphs.\ngganimate, an ggplot extension for creating animated statistical graphs.\ngifski converts video frames to GIF animations using pngquant’s fancy features for efficient cross-frame palettes and temporal dithering. It produces animated GIFs that use thousands of colors per frame.\ngapminder: An excerpt of the data available at Gapminder.org. We just want to use its country_colors scheme.\n\nThe code chunk below will be used to accomplish the task.\n\npacman::p_load(readxl, gifski, gapminder,\n               plotly, gganimate, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#importing-data",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03b.html#importing-data",
    "title": "Hands-on Exercise 3b: Programming Animated Statistical Graphics with R",
    "section": "2.2 Importing Data",
    "text": "2.2 Importing Data\nFor this exercise, we will use globalPop. It is in xls file format, hence we use read_xls function of the readxl package from tidyverse family.\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate_at(col, as.factor) %&gt;%\n  mutate(Year = as.integer(Year))\n\n\n\n\n\n\n\nNote\n\n\n\n“Country” and “Continent” are reclassified as categorical data and “Year” is reclassified as numeric integer."
  }
]