[
  {
    "objectID": "Take-home_Ex/Take-home_Ex04/Take-home_Ex04.html",
    "href": "Take-home_Ex/Take-home_Ex04/Take-home_Ex04.html",
    "title": "Take-home Exercise 4: Prototyping Modules for Shiny Application",
    "section": "",
    "text": "pacman::p_load(tidyverse, plotly, ggplot2, forecast, zoo)\n\n\nweather_list &lt;- list.files(path = \"data\",    \n                           recursive = TRUE,    \n                           pattern = \"\\\\.csv$\",\n                           full.names = TRUE)  \nweather &lt;- read_csv(weather_list)\n\n\nweather &lt;- weather %&gt;% \n          select(1:13, \"DailyRainfall\" = 5, \"HighestRainfall30\" = 6,\n                 \"HighestRainfall60\" = 7, \"HighestRainfall120\" = 8,\n                 \"MeanTemp\" = 9, \"MaxTemp\" = 10, \"MinTemp\" = 11,\n                 \"MeanWindSpeed\" = 12, \"MaxWindSpeed\" = 13)\nweather$Year &lt;- as.integer(weather$Year)\nweather$Month &lt;- month.abb[weather$Month]\nweather$Day &lt;- as.integer(weather$Day)\nweather$DailyRainfall &lt;- as.numeric(weather$DailyRainfall)\nweather$HighestRainfall30 &lt;- as.numeric(weather$HighestRainfall30)\nweather$HighestRainfall60 &lt;- as.numeric(weather$HighestRainfall60)\nweather$HighestRainfall120 &lt;- as.numeric(weather$HighestRainfall120)\nweather$MeanTemp &lt;- as.numeric(weather$MeanTemp)\nweather$MaxTemp &lt;- as.numeric(weather$MaxTemp)\nweather$MinTemp &lt;- as.numeric(weather$MinTemp)\nweather$MeanWindSpeed &lt;- as.numeric(weather$MeanWindSpeed)\nweather$MaxWindSpeed &lt;- as.numeric(weather$MaxWindSpeed)\n\nglimpse(weather)\n\nRows: 168,836\nColumns: 13\n$ Station            &lt;chr&gt; \"Admiralty\", \"Admiralty\", \"Admiralty\", \"Admiralty\",…\n$ Year               &lt;int&gt; 2009, 2009, 2009, 2009, 2009, 2009, 2009, 2009, 200…\n$ Month              &lt;chr&gt; \"Jan\", \"Jan\", \"Jan\", \"Jan\", \"Jan\", \"Jan\", \"Jan\", \"J…\n$ Day                &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, …\n$ DailyRainfall      &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ HighestRainfall30  &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ HighestRainfall60  &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ HighestRainfall120 &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ MeanTemp           &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ MaxTemp            &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ MinTemp            &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ MeanWindSpeed      &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ MaxWindSpeed       &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n\n\n\nweather$DDate &lt;- as.Date(paste(weather$Year, \n                               weather$Month,\n                               weather$Day, sep = \"-\"), format = \"%Y-%b-%d\")\n\nTemp_YM &lt;- weather %&gt;% \n  group_by(Year, Month) %&gt;% \n  summarise(AveMeanTemp = mean(MeanTemp, na.rm = TRUE),\n            MaxMaxTemp = max(MaxTemp, na.rm = TRUE),\n            MinMinTemp = min(MinTemp, na.rm = TRUE)) %&gt;% \n  ungroup()\nTemp_YM &lt;- Temp_YM[!is.na(Temp_YM$AveMeanTemp), ]\n\nTemp_Station_YM &lt;- weather %&gt;% \n  group_by(Station, Year, Month) %&gt;% \n  summarise(AveMeanTemp = mean(MeanTemp, na.rm = TRUE),\n            MaxMaxTemp = max(MaxTemp, na.rm = TRUE),\n            MinMinTemp = min(MinTemp, na.rm = TRUE)) %&gt;% \n  ungroup()\nTemp_Station_YM &lt;- Temp_Station_YM[!is.na(Temp_Station_YM$AveMeanTemp), ]\n\n\ntest &lt;- Temp_Station_YM %&gt;% \n  group_by(Year, Month) %&gt;% \n    summarise(MeanT = mean(AveMeanTemp, na.rm = TRUE),\n            MaxT = max(MaxMaxTemp, na.rm = TRUE),\n            MinT = min(MinMinTemp, na.rm = TRUE)) %&gt;% \n  ungroup()\n\n\nts_data &lt;- ts(Temp_YM$AveMeanTemp, \n              start = c(1982, 1), end = c(2023, 12), frequency = 12)  \nmodel &lt;- auto.arima(ts_data)\nforecast_values &lt;- forecast(model, h = 120)\n\n\nplot_ly() %&gt;%\n  add_lines(x = time(ts_data), y = ts_data, name = \"Observed\",\n            text = paste(\n                    format(as.yearmon(time(ts_data)), \"%Y-%b\"), \n                    \"&lt;br&gt;Mean Temp: \", \n                    round(ts_data, 2)), hoverinfo = \"text\") %&gt;%\n  add_lines(\n    x = time(forecast_values$mean),\n    y = forecast_values$mean,\n    name = \"Forecast\",\n    text = paste(\n      format(as.yearmon(time(forecast_values$mean)), \"%Y-%b\"), \n      \"&lt;br&gt;Mean Temp: \", \n      round(forecast_values$mean, 2)\n    ),\n    hoverinfo = \"text\"\n  ) %&gt;%\n  layout(title = \"Mean Temperature Forecast\",\n         xaxis = list(title = \"Date\"),\n         yaxis = list(title = \"Mean Temperature\")) \n\n\n\n\n\n\ngg &lt;- ggplot(Temp_YM, \n       aes(x = factor(Month, levels = month.abb), y = AveMeanTemp, \n           group = Year, color = factor(Year))) +\n    geom_point(aes(color = factor(Year),\n                   text = paste(Year, \"-\", Month,\n                                \"&lt;br&gt;MeanTemp:\", round(AveMeanTemp, 2), \"ºC\"))) +\n    geom_line() +\n    labs(x = \"Month\", \n       y = \"Mean Temperatures (°C)\", \n       title = \"Mean Temperatures variation throughout the year\",\n       subtitle = \"Hotter days from mid May 2023 as compared to years 1983, 1993, 2003 and 2013\",\n       caption = \"Data from Meteorological Service Singapore website\") +\n  scale_color_discrete(name = \"Year\") +\n  theme_minimal() + \n  theme(plot.title = element_text(face = \"bold\"))\n\nggplotly(gg, tooltip = \"text\") %&gt;%\n    layout(title = list(text = \n                        paste0(gg$labels$title, \"&lt;br&gt;\", \"&lt;sup&gt;\", \n                               gg$labels$subtitle, \"&lt;/sup&gt;\"),\n                        font = list(weight = \"bold\")))\n\n\n\n\n\n\nets_model &lt;- ets(ts_data)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608-VAA",
    "section": "",
    "text": "Welcome to my 10-week ISSS608 Visual Analytics and Applications journey.\nOn this website, you will find my coursework prepared for this course.\nThe road is tough but the following quote motivates me!\n“Everybody, try laughing. Then whatever scares you will go away!” - Tatsuo Kusakabe"
  }
]