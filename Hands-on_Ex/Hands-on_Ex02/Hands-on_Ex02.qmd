---
title: "Hands-on Exercise 2: Beyond ggplot2 Fundamentals"
author: "Vanessa Heng"
date: "January 16, 2024"
date-modified: "last-modified"
execute:
  eval: true
  echo: true
  #freeze: true
  warning: false
  message: false
editor: visual
---

# 1 Overview

In this exercise, we are using ggplot2 extensions to create more elegant and effective statistical graphics using ggrepel, ggthemes, hrbrthemes, and patchwork packages.

# 2 Getting Started

## 2.1 Installing and launching the required libraries

The code below uses p_load() of the Pacman package to check if all the following packages are installed on the laptop. If they are, then they will be launched into R.

-   tidyverse

-   [ggrepel](https://ggrepel.slowkow.com/): an R package provides geoms for ggplot2 to repel overlapping text labels

-   ggthemes: an R package provides some extra themes, geoms, and scales for ‘ggplot2’.

-   hrbrthemes: an R package provides typography-centric themes and theme components for ggplot2.

-   patchwork: an R package for preparing composite figures created using ggplot2.

```{r}
pacman::p_load(tidyverse, ggrepel,
               ggthemes, hrbrthemes,
               patchwork)

```

## 2.2 Importing the data

*Exam_data* consists of year-end examination grades of a cohort of primary 3 students from a local school. It is in the CSV file format.

The code chunk below imports *exam_data.csv* into the R environment by using [*read_csv()*](https://readr.tidyverse.org/reference/read_delim.html) function of the **readr** package (one of the tidyverse packages).

```{r}
exam_data <- read_csv("data/Exam_data.csv")
```

::: callout-tip
## Observations

1.  This data is about students' examination scores for their 3 subjects (English, Maths, and Science) from various classes in Primary 3 from a school.

2.  There are 4 categorical variables: ID, CLASS, GENDER, and RACE, and 3 continuous variables: ENGLISH, MATHS, and SCIENCE.

3.  Out of the 3 subjects, Maths has the higher mean and median score.
:::

# 3 Beyond ggplot2 Annotation: ggrepel

Adding annotation to statistical graphs that contain a huge number of data points will make the graph not presentable. The following is an example of annotating student ID to each point on the scatter plot.

```{r}
ggplot(data = exam_data, aes(x = MATHS, y = ENGLISH)) +
  geom_point() +
  geom_smooth(method = lm, size = 0.5) +
  geom_label(aes(label = ID), 
              hjust = 0.5,
              vjust = -0.5) +
  coord_cartesian(xlim = c(0, 100), 
                  ylim = c(0, 100)) +
  ggtitle("English scores versus Maths score for Primary 3 students")

```

[**ggrepel**](https://ggrepel.slowkow.com/) ![](https://r4va.netlify.app/chap02/img/image3.jpg){width="25" height="28"} is an extension of the **ggplot2** package which provides `geoms` for **ggplot2** to repel overlapping texts.

![](/images/ggrepel.jpg){width="477"}

## 3.1 Working with ggrepel

Let's replace `geom_label()` by [geom_label_repel()](https://ggrepel.slowkow.com/reference/geom_text_repel.html).

```{r}
ggplot(data = exam_data, aes(x = MATHS, y = ENGLISH)) +
  geom_point() +
  geom_smooth(method = lm, size = 0.5) +
  geom_label_repel(aes(label = ID), 
              fontface = "bold") +
  coord_cartesian(xlim = c(0, 100), 
                  ylim = c(0, 100)) +
  ggtitle("English scores versus Maths score for Primary 3 students")

```

::: callout-tip
## Observation

Though the plot is neater, the annotation appears only at some data points as many points are overlapped. There is an option to increase max.overlaps.
:::

# 4 Beyond ggplot2 Themes

Themes control the display of all non-data elements of the plot. ggplot2 comes with 8 [built-in themes](https://ggplot2.tidyverse.org/reference/ggtheme.html): `theme_gray()`, `theme_bw()`, `theme_classic()`, `theme_dark()`, `theme_light()`, `theme_linedraw()`, `theme_minimal()`, and `theme_void()`

We can also use [`theme_set()`](https://ggplot2.tidyverse.org/reference/theme_get.html) to modify the active theme, affecting all future plots.

For example, the following code plots a histogram of the distribution of Maths scores with the default theme.

```{r}
ggplot(data = exam_data, aes(x = MATHS)) +
  geom_histogram(bins = 20, boundary = 100,
                  color = "grey25", fill = "grey90") +
  ggtitle("Distribution of Maths scores")
```

## 4.1 Working with ggtheme package

[**ggthemes**](https://cran.r-project.org/web/packages/ggthemes/) provides [‘ggplot2’ themes](https://yutannihilation.github.io/allYourFigureAreBelongToUs/ggthemes/) that replicate the look of plots by Edward Tufte, Stephen Few, [Fivethirtyeight](https://fivethirtyeight.com/), [The Economist](https://www.economist.com/graphic-detail), ‘Stata’, ‘Excel’, and [The Wall Street Journal](https://www.pinterest.com/wsjgraphics/wsj-graphics/), among others.

Check out some of the available themes here:

::: panel-tabset
## Economist

```{r}
ggplot(data = exam_data, aes(x = MATHS)) +
  geom_histogram(bins = 20, boundary = 100,
                  color = "grey25", fill = "grey90") +
  ggtitle("Distribution of Maths scores (Economist theme)") +
  theme_economist()
```

## Excel

```{r}
ggplot(data = exam_data, aes(x = MATHS)) +
  geom_histogram(bins = 20, boundary = 100,
                  color = "grey25", fill = "grey90") +
  ggtitle("Distribution of Maths scores (Excel theme)") +
  theme_excel()
```

## Few

```{r}
ggplot(data = exam_data, aes(x = MATHS)) +
  geom_histogram(bins = 20, boundary = 100,
                  color = "grey25", fill = "grey90") +
  ggtitle("Distribution of Maths scores (Few theme)") +
  theme_few()
```

## Solarized

```{r}
ggplot(data = exam_data, aes(x = MATHS)) +
  geom_histogram(bins = 20, boundary = 100,
                  color = "grey25", fill = "grey90") +
  ggtitle("Distribution of Maths scores (Solarized theme)") +
  theme_solarized()
```
:::

## 4.2 Working with hrbrthemes package

[**hrbrthemes**](https://cinc.rud.is/web/packages/hrbrthemes/) package provides a base theme that focuses on typographic elements, including where various labels are placed as well as the fonts that are used.

```{r}
ggplot(data = exam_data, aes(x = MATHS)) +
  geom_histogram(bins=20, boundary = 100,
                  color="grey25", fill="grey90") +
  ggtitle("Distribution of Maths scores") +
  theme_ipsum()
```

The second goal centers around productivity for a production workflow. This “production workflow” is the context for where the elements of hrbrthemes should be used. Consult [this vignette](https://cran.r-project.org/web/packages/hrbrthemes/vignettes/why_hrbrthemes.html) to learn more.

```{r}
ggplot(data = exam_data, aes(x = MATHS)) +
  geom_histogram(bins=20, boundary = 100,
                  color="grey25", fill="grey90") +
  ggtitle("Distribution of Maths scores") +
  theme_ipsum(axis_title_size = 20, 
              base_size = 15, grid = "Y")
```

::: callout-tip
## Attributes in the theme_ipsum() function

-   `axis_title_size` is used to increase the font size of the axis title to 20

-   `base_size` is used to increase the default axis label to 15

-   `grid = "Y"` is used to remove the x-axis grid lines. If set to "X", y-axis grid lines will be removed.
:::

# 5 Beyond Single Graph

It is common to have multiple graphs to tell a compelling visual story. Several ggplot2 extensions provide functions to compose figures with multiple graphs. Let's see how we can create a composite plot by combining multiple graphs in this section. First, let us create three statistical graphics by using the code chunk below.

```{r}
p1 <- ggplot(data = exam_data, aes(x = MATHS)) +
  geom_histogram(bins=20, boundary = 100,
                 color="grey25", fill="grey90") + 
  coord_cartesian(xlim=c(0,100)) +
  ggtitle("Distribution of Maths scores")
```

```{r}
p2 <- ggplot(data = exam_data, aes(x = ENGLISH)) +
  geom_histogram(bins=20, boundary = 100,
                 color="grey25", fill="grey90") + 
  coord_cartesian(xlim=c(0,100)) +
  ggtitle("Distribution of English scores")
```

```{r}
p3 <- ggplot(data = exam_data, 
             aes(x = MATHS, y = ENGLISH)) +
  geom_point() +
  geom_smooth(method=lm, size=0.5) +  
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,100)) +
  ggtitle("English scores versus Maths scores for Primary 3")
```

## 5.1 Creating composite graphics: pathwork methods

One ggplot2 extension we are exploring in this section is [**patchwork**](https://patchwork.data-imaginist.com/).

The **patchwork** package has a very simple syntax where we can create layouts easily.

## 5.2 Combining two ggplot2 graphs

Simply use + to combine 2 plots in a two-column layout!

```{r}
p1 + p2
```

## 5.3 Combining three ggplot2 graphs

We can plot more complex composite by using appropriate operators. For example, the composite figure below is plotted by using:

-   “\|” operator to stack two ggplot2 graphs,

-   “/” operator to place the plots beside each other,

-   “()” operator to define the sequence of the plotting.

::: panel-tabset
## Layout 1

```{r}
(p1 / p2) | p3
```

## Layout 2

```{r}
(p1 | p2) / p3
```

## Layout 3

```{r}
p1 | p2 | p3 
```
:::

## 5.4 Creating a composite figure with tag

In order to identify subplots in text, **patchwork** also provides auto-tagging capabilities as shown in the figure below.

```{r}
((p1 / p2) | p3) + 
  plot_annotation(tag_levels = 'I')
```

## 5.5 Creating a composite figure with an insert

With [`inset_element()`](https://patchwork.data-imaginist.com/reference/inset_element.html) of **patchwork**, we can place one or several plots or graphic elements freely on top or below another plot.

```{r}
p3 + inset_element(p2,
  left = 0.02,
  bottom = 0.7,
  right = 0.5,
  top = 1)
```

## 5.6 Creating a composite figure by using patchwork and ggtheme

::: panel-tabset
## Apply theme to all plots

```{r}
patchwork <- (p1 / p2) | p3
patchwork & theme_economist()
```

## Apply theme to a single plot

```{r}
(p1 / p2) | (p3 + theme_economist())
```
:::

# 6 Reference Patchwork

-   [Patchwork R package goes nerd viral](https://www.littlemissdata.com/blog/patchwork)

-   [ggrepel](https://ggrepel.slowkow.com/)

-   [ggthemes](https://ggplot2.tidyverse.org/reference/ggtheme.html)

-   [hrbrthemes](https://cinc.rud.is/web/packages/hrbrthemes/)

-   [ggplot tips: Arranging plots](https://albert-rapp.de/post/2021-10-28-extend-plot-variety/)

-   [ggplot2 Theme Elements Demonstration](https://henrywang.nl/ggplot2-theme-elements-demonstration/)

-   [ggplot2 Theme Elements Reference Sheet](https://isabella-b.com/blog/ggplot2-theme-elements-reference/)
